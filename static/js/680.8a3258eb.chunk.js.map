{"version":3,"file":"static/js/680.8a3258eb.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactItems/ContactItems.module.css?5256","components/ContactItems/ContactItems.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"header\":\"Section_header__mpTaY\"};","import css from './Section.module.css';\n\nexport function Section({ title, children }) {\n  return (\n    <section className={css.section}>\n      {title && <h2 className={css.header}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n","export const selectContactsList = state => state.contacts.items;\nexport const selectContactsFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"inputBlock\":\"ContactForm_inputBlock__exhII\",\"inputField\":\"ContactForm_inputField__qJkou\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsList } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './ContactForm.module.css';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const newName = form.elements.name.value;\n    const newNumber = form.elements.number.value;\n\n    if (isExist(contacts, newName))\n      return alert(`${newName} is already in contacts.`);\n\n    if (newName !== '') {\n      dispatch(addContact({ name: newName, number: newNumber }));\n      form.reset();\n      return;\n    }\n\n    alert('Contact cannot be empty. Enter some text!');\n  };\n\n  const isExist = (contacts, newName) => {\n    if (!contacts) return;\n\n    return contacts.find(\n      contact => contact.name.toLowerCase() === newName.toLowerCase()\n    );\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={handleSubmit}>\n      <label className={css.inputBlock}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={css.inputField}\n          placeholder=\"Enter name\"\n        />\n      </label>\n      <label className={css.inputBlock}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={css.inputField}\n          placeholder=\"Enter the phone number\"\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"inputBlock\":\"Filter_inputBlock__a77Qo\",\"inputField\":\"Filter_inputField__GiGjH\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsFilter } from 'redux/contacts/selectors';\nimport { setContactsFilter } from 'redux/contacts/filter';\nimport css from './Filter.module.css';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const onHandlerFilterChange = ({ currentTarget: { value } }) => {\n    const normalizeText = value.toLowerCase().trim();\n    dispatch(setContactsFilter(normalizeText));\n  };\n\n  const onDisplayAll = () => {\n    dispatch(setContactsFilter(''));\n  };\n\n  return (\n    <label className={css.inputBlock}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"name\"\n        className={css.inputField}\n        value={filter}\n        placeholder=\"Enter name\"\n        onChange={onHandlerFilterChange}\n      />\n      <button type=\"button\" onClick={() => onDisplayAll()}>\n        Show all\n      </button>\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItems_item__bLAjO\",\"marker\":\"ContactItems_marker__iaoIZ\",\"label\":\"ContactItems_label__Kw2gm\",\"number\":\"ContactItems_number__zuE11\",\"button\":\"ContactItems_button__iya3w\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactItems.module.css';\n\nexport default function ContactItems({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <li className={css.item}>\n      <span className={css.marker}></span>\n      <p className={css.label}>{name}</p>\n      <p className={css.number}>{number}</p>\n      <button\n        type=\"button\"\n        className={css.button}\n        onClick={() => handleDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItems.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useSelector } from 'react-redux';\nimport {\n  selectContactsList,\n  selectContactsFilter,\n} from 'redux/contacts/selectors';\nimport ContactItems from 'components/ContactItems/ContactItems';\nimport css from './ContactList.module.css';\n\nexport function ContactList() {\n  const allContacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n\n  const filteredContacts = [\n    ...allContacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    ),\n  ];\n\n  return (\n    <ul className={css.list}>\n      {filteredContacts.map(({ id, name, number }) => {\n        return <ContactItems key={id} id={id} name={name} number={number} />;\n      })}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"noFeedback\":\"Notification_noFeedback__SK1js\"};","import PropTypes from 'prop-types';\nimport css from './Notification.module.css';\n\nexport function Notification({ message }) {\n  return <h3 className={css.noFeedback}>{message}</h3>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Section } from 'components/Section/Section';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Notification } from 'components/Notification/Notification';\nimport {\n  selectContactsList,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n\n      <Section title=\"Contacts\">\n        {isLoading && !error && <Loader />}\n        {contacts.length ? (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        ) : (\n          <Notification message=\"The contact list is empty\" />\n        )}\n      </Section>\n    </>\n  );\n}\n"],"names":["Section","title","children","className","css","selectContactsList","state","contacts","items","selectContactsFilter","filter","selectIsLoading","isLoading","selectError","error","ContactForm","dispatch","useDispatch","useSelector","isExist","newName","find","contact","name","toLowerCase","onSubmit","e","preventDefault","form","target","elements","value","newNumber","number","alert","addContact","reset","type","placeholder","Filter","onChange","normalizeText","currentTarget","trim","setContactsFilter","onClick","ContactItems","id","contactId","deleteContact","ContactList","allContacts","filteredContacts","includes","map","Notification","message","Contacts","useEffect","fetchContacts","Helmet","Loader","length"],"sourceRoot":""}