{"version":3,"file":"static/js/961.9182eac8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactItems/ContactItems.module.css?5256","components/ContactItems/ContactItems.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"header\":\"Section_header__mpTaY\"};","import css from './Section.module.css';\n\nexport function Section({ title, children }) {\n  return (\n    <section className={css.section}>\n      {title && <h2 className={css.header}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n","export const selectLoading = state => state.contacts.loading;\nexport const selectFilter = state => state.filter;\nexport const selectAllContacts = state => state.contacts.items;\n\nexport const selectContactsList = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItems_item__bLAjO\",\"marker\":\"ContactItems_marker__iaoIZ\",\"label\":\"ContactItems_label__Kw2gm\",\"number\":\"ContactItems_number__zuE11\",\"button\":\"ContactItems_button__iya3w\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactItems.module.css';\n\nexport default function ContactItems({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <li className={css.item}>\n      <span className={css.marker}></span>\n      <p className={css.label}>{name}</p>\n      <p className={css.number}>{number}</p>\n      <button\n        type=\"button\"\n        className={css.button}\n        onClick={() => handleDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItems.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useSelector } from 'react-redux';\nimport {\n  selectContactsList,\n  selectContactsFilter,\n} from 'redux/contacts/selectors';\nimport ContactItems from '../ContactItems/ContactItems';\nimport css from './ContactList.module.css';\n\nexport function ContactList() {\n  const allContacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n\n  const filteredContacts = [\n    ...allContacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    ),\n  ];\n\n  return (\n    <ul className={css.list}>\n      {filteredContacts.map(({ id, name, number }) => {\n        return <ContactItems key={id} id={id} name={name} number={number} />;\n      })}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"inputBlock\":\"ContactForm_inputBlock__exhII\",\"inputField\":\"ContactForm_inputField__qJkou\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsList } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './ContactForm.module.css';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const newName = form.elements.name.value;\n    const newNumber = form.elements.number.value;\n\n    if (isExist(contacts, newName))\n      return alert(`${newName} is already in contacts.`);\n\n    if (newName !== '') {\n      dispatch(addContact({ name: newName, number: newNumber }));\n      form.reset();\n      return;\n    }\n\n    alert('Contact cannot be empty. Enter some text!');\n  };\n\n  const isExist = (contacts, newName) => {\n    if (!contacts) return;\n\n    return contacts.find(\n      contact => contact.name.toLowerCase() === newName.toLowerCase()\n    );\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={handleSubmit}>\n      <label className={css.inputBlock}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={css.inputField}\n          placeholder=\"Enter name\"\n        />\n      </label>\n      <label className={css.inputBlock}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={css.inputField}\n          placeholder=\"Enter the phone number\"\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"inputBlock\":\"Filter_inputBlock__a77Qo\",\"inputField\":\"Filter_inputField__GiGjH\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setContactsFilter } from 'redux/contacts/filter';\nimport { selectContactsFilter } from 'redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const onHandlerFilterChange = ({ currentTarget: { value } }) => {\n    const normalizeText = value.toLowerCase().trim();\n    dispatch(setContactsFilter(normalizeText));\n  };\n\n  const onDisplayAll = () => {\n    dispatch(setContactsFilter(''));\n  };\n\n  return (\n    <label className={css.inputBlock}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"name\"\n        className={css.inputField}\n        value={filter}\n        placeholder=\"Enter name\"\n        onChange={onHandlerFilterChange}\n      />\n      <button type=\"button\" onClick={() => onDisplayAll()}>\n        Show all\n      </button>\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"noFeedback\":\"Notification_noFeedback__SK1js\"};","import PropTypes from 'prop-types';\nimport css from './Notification.module.css';\n\nexport function Notification({ message }) {\n  return <h3 className={css.noFeedback}>{message}</h3>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Section } from 'components/Section/Section';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { Filter } from 'components/Filter/Filter';\nimport { Notification } from 'components/Notification/Notification';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContactsList,\n  selectError,\n  selectLoading,\n} from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n\n      <Section title=\"Contacts\">\n        {isLoading && !error && <Loader />}\n        {/* {isLoading && !error && <b>Request in progress...</b>} */}\n        {contacts.length ? (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        ) : (\n          <Notification message=\"The contact list is empty\" />\n        )}\n      </Section>\n    </>\n  );\n}\n"],"names":["Section","title","children","className","css","selectLoading","state","contacts","loading","selectContactsList","items","selectError","error","selectContactsFilter","filter","ContactItems","id","name","number","dispatch","useDispatch","type","onClick","contactId","deleteContact","ContactList","allContacts","useSelector","filteredContacts","contact","toLowerCase","includes","map","ContactForm","isExist","newName","find","onSubmit","e","preventDefault","form","target","elements","value","newNumber","alert","addContact","reset","placeholder","Filter","onChange","normalizeText","currentTarget","trim","setContactsFilter","Notification","message","Contacts","isLoading","useEffect","fetchContacts","Helmet","Loader","length"],"sourceRoot":""}